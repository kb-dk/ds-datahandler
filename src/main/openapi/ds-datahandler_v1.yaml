openapi: 3.0.2
info:
  version: 'v1'
  title: '${project.name}'
  description: |
    ${project.description}
  contact:
    email: '${user.name}@kb.dk'
  license:
    name: '${license.name}'
    url: '${license.url}'
servers:
  #  /api must match servlet-mapping in web.xml
  - url: '/${project.artifactId}/v1'
    description: 'Version 1'

paths:

  /oai/config:
    get:
      tags:
        - '${project.name}'
      summary: 'Retrieve list of configured OAI-PMH targets'
      operationId: getOaiTargetsConfiguration
      responses:
        '200':
          description: 'The full list of configured OAI-PMH targets will all parameters. The name is the key used when starting a new import.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OaiTargetList'


  /oai/import/full:
    get:
      tags:
        - '${project.name}'
      summary: 'Start full ingest of a OAI target into DS-storage. From time will be 1900-01-01'
      operationId: oaiIngestFull
      parameters:
        - name: oaiTarget
          in: query
          description: 'Name of the oai target to start full import'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Returns total number of records ingested.
          content:
            application/json:
              schema:
                type: integer
                format: int32      

  /oai/import/delta:
    get:
      tags:
        - '${project.name}'
      summary: 'Start delta import of a OAI-target. From time will be the datestamp of the last record imported for that OAI target. When the import has finished it will update the datestamp.'
      operationId: oaiIngestDelta
      parameters:
        - name: oaiTarget
          in: query
          description: 'Name of the oai target to start delta import'
          required: true
          schema:
            type: string     
                         
      responses:
        '200':
          description: OK. Returns total number of records ingested.
          content:
            application/json:
              schema:
                type: integer
                format: int32      


components:
  schemas:

    OaiTargetList:
      type: array
      items: 
        $ref: '#/components/schemas/OaiTarget'


    OaiTarget:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the OAI target'
        url:
          type: string
          description: 'Base YRL to the OAI server'                
        set:
          type: string
          description: 'Optional OAI parameter to specify which collection to harvest'                
        metadataprefix:
          type: string
          description: 'Specify for the dataformat. Some OAI servers can return data in different formats.'                
        username:
          type: string
          description: 'User name if the OAI server require basic authentication'                
        password:
          type: string
          description: 'Password if the OAI server require basic authentication'                
        recordBase:
          type: string
          description: 'Name of the recordbase when ingesting into DS-storage. The recordbase must be configured in ds-storage'
        decription:
          type: string
          description: 'Human readable name for the collection'                

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
