openapi: 3.0.2
info:
  version: 'v1'
  title: '${project.name}'
  description: |
    ${project.description}
  contact:
    email: '${user.name}@kb.dk'
  license:
    name: '${license.name}'
    url: '${license.url}'
servers:
  #  /api must match servlet-mapping in web.xml
  - url: '/${project.artifactId}/v1'
    description: 'Version 1'

paths:

  /monitor/status:
    get:
      tags:
        - '${project.name}'
      summary: 'Retrieve list of configured OAI-PMH targets'
      operationId: getJobsList
      responses:
        '200':
          description: 'List of jobs both running and completed since server start. Sorted by most recent jobs first. Still running jobs first'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OaiJobList'

  /monitor/ping:
    get:
      tags:
        - "${project.name}"
      summary: Ping the server to check if the server is reachable.
      operationId: ping

      x-useGenericResponse: false # If enabled the method will return Response
      x-streamingOutput: false # If enabled the method will return StreamingOutput.
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '406':
          description: 'Not Acceptable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Error'
          content:
            text/plain:
              schema:
                type: string

  /import/zip:
    post:
       tags:
        - '${project.name}'
       summary: 'Import records from ZIP file with records. Each file in the zip-file is a xml-document for single records. Record format METS with mods. Record  ID from the record is <mods:identifier>. Record ID in storage will be recordBase:uuid-extracted-from<mods:identifier>' 
       
       operationId: importFromZip
       requestBody:
         content:
           multipart/form-data:
             schema:
              type: object
              properties:               
                recordBase:
                  type: string
                fileName:
                  type: string
                  format: binary
       
       responses:
        '200':
          description: Returns a list of filenames of records that failed.
          content:
            application/json:
              schema:           
                type: array
                items:
                 type: string      


  /oai/config:
    get:
      tags:
        - '${project.name}'
      summary: 'Retrieve list of configured OAI-PMH targets'
      operationId: getOaiTargetsConfiguration
      responses:
        '200':
          description: 'The full list of configured OAI-PMH targets will all parameters. The name is the key used when starting a new import.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OaiTargetList'


  /oai/import/full:
    get:
      tags:
        - '${project.name}'
      summary: 'Start full ingest of a OAI target into DS-storage. From time will be 1900-01-01. When called the job will finished if no errors are encountered even if the socket is closed from the client triggering the call.'
      operationId: oaiIngestFull
      parameters:
        - name: oaiTarget
          in: query
          description: 'Name of the oai target to start full import. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Returns total number of records ingested.
          content:
            application/json:
              schema:
                type: integer
                format: int32      

  /oai/import/delta:
    get:
      tags:
        - '${project.name}'
      summary: 'Start delta import of a OAI-target. From time will be the datestamp of the last record imported for that OAI target. When the import has finished it will update the datestamp. When called the job will finished if no errors are encountered even if the socket is closed from the client triggering the call.'
      operationId: oaiIngestDelta
      parameters:
        - name: oaiTarget
          in: query
          description: 'Name of the oai target to start delta import'
          required: true
          schema:
            type: string     
                         
      responses:
        '200':
          description: OK. Returns total number of records ingested.
          content:
            application/json:
              schema:
                type: integer
                format: int32      


components:
  schemas:

    OaiTargetList:
      type: array
      items: 
        $ref: '#/components/schemas/OaiTarget'


    OaiTarget:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the OAI target.'
          example: 'kb.images.billed.hca'
        url:
          type: string
          description: 'Base YRL to the OAI server.'                
          example: 'http://www5.kb.dk/cop/oai/'
        set:
          type: string
          description: 'Optional OAI parameter to specify which collection to harvest.'                
          example: 'oai:kb.dk:images:billed:2014:jun:hca'
        metadataprefix:
          type: string
          description: 'Specify for the dataformat. Some OAI servers can return data in different formats.'                
          example: 'mods'
        username:
          type: string
          description: 'User name if the OAI server require basic authentication'                
        password:
          type: string
          description: 'Password if the OAI server require basic authentication'                
        recordBase:
          type: string
          description: 'Name of the recordbase when ingesting into DS-storage. The recordbase must be configured in ds-storage.'
          example: 'kb.images.billed.hca'
        decription:
          type: string
          description: 'Human readable name for the collection.'                
          example: 'H.C. Andersen'

    OaiJob:
      type: object
      properties:
        name:
          type: string
          description: 'Name of the OAI target.'
        status:
          type: string
          description: 'RUNNING or COMPLETED. Status COMPLETED can have failed and will be marked with error.'          
        id:
          type: integer
          format: int64
          description: 'System time in millis when job was started'
        startedTime:
          type: string
          description: 'Format YYYY-MM-DD HH:MM:SS'                   
        completedTime:
          type: string
          description: 'Format YYYY-MM-DD HH:MM:SS. Empty if job has not finished'
        numberOfRecords:
          type: integer
          format: int32
          description: 'number of records harvested by job'
        error:
          type: boolean
          description: 'If true the job did not complete and not all record was harvested'
                       
    OaiJobList:
      type: array
      items: 
        $ref: '#/components/schemas/OaiJob'
                       
                              
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
